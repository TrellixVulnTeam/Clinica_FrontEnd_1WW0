{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrian\\\\Desktop\\\\Clinica_FrontEnd\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Error } from \"./Error\";\nimport { getAuth } from \"../../services/ApiDatings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false,\n      logged: false\n    };\n    this.dni = \"\";\n    this.phone = \"\";\n  }\n\n  async submitLogin(e) {\n    e.preventDefault();\n    if (this.dni === \"\") alert(\"Debes rellenar el DNI\"); //[1º] TODO: coger el contenido de email y password\n    //[2º] TODO: fetch al backend\n\n    let sasa = await getAuth(this.dni, this.phone);\n    console.log(sasa); //devuelve el token de auth\n    //[3º] TODO: si el fetch devuelve token no hago nada\n\n    if (sasa.error) {\n      // Actualiza el estado del componente con lo que queremos cambiar.\n      // Y esto automáticamente renderiza de nuevo el componente\n      this.setState({\n        error: true\n      });\n    } //[4º] TODO: si el fetch no devuelve token actualizo el estado del error\n\n    /*No TOKEN*/\n\n    /* const result = getAuth();\r\n    if (result) this.setState({ error: true }); */\n\n  }\n\n  handlerDni(e) {\n    this.dni = e.target.value;\n    /* console.log(this.dni, \"handler DNI\"); */\n  }\n\n  handlerPhone(e) {\n    this.phone = e.target.value;\n    /* console.log(e.target.value, \"handler Phone\"); */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.error && /*#__PURE__*/_jsxDEV(Error, {\n        msg: \"Credenciales incorrectas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onInput: e => this.handlerDni(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onInput: e => this.handlerPhone(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => this.submitLogin(e),\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adrian/Desktop/Clinica_FrontEnd/src/components/login/Login.js"],"names":["React","Component","Error","getAuth","Login","constructor","props","state","error","logged","dni","phone","submitLogin","e","preventDefault","alert","sasa","console","log","setState","handlerDni","target","value","handlerPhone","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,KAAK,CAACC,SAA1B,CAAoC;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAb;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEgB,QAAXC,WAAW,CAACC,CAAD,EAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,KAAKJ,GAAL,KAAa,EAAjB,EAAqBK,KAAK,CAAC,uBAAD,CAAL,CAFF,CAGnB;AAEA;;AACA,QAAIC,IAAI,GAAG,MAAMb,OAAO,CAAC,KAAKO,GAAN,EAAW,KAAKC,KAAhB,CAAxB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAPmB,CAOA;AAEnB;;AAEA,QAAIA,IAAI,CAACR,KAAT,EAAgB;AACd;AACA;AACA,WAAKW,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAfkB,CAiBnB;;AAEA;;AAEA;AACJ;;AACG;;AAEDY,EAAAA,UAAU,CAACP,CAAD,EAAI;AACZ,SAAKH,GAAL,GAAWG,CAAC,CAACQ,MAAF,CAASC,KAApB;AACA;AACD;;AAEDC,EAAAA,YAAY,CAACV,CAAD,EAAI;AACd,SAAKF,KAAL,GAAaE,CAAC,CAACQ,MAAF,CAASC,KAAtB;AACA;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKjB,KAAL,CAAWC,KAAX,iBAAoB,QAAC,KAAD;AAAO,QAAA,GAAG,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADvB,eAEE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,EAAEK,CAAC,IAAI,KAAKO,UAAL,CAAgBP,CAAhB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,OAAO,EAAEA,CAAC,IAAI,KAAKU,YAAL,CAAkBV,CAAlB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,UAAA,OAAO,EAAEA,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAWD;;AAvDwC","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Error } from \"./Error\";\r\nimport { getAuth } from \"../../services/ApiDatings\";\r\n\r\nexport class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: false, logged: false };\r\n    this.dni = \"\";\r\n    this.phone = \"\";\r\n  }\r\n\r\n  async submitLogin(e) {\r\n    e.preventDefault();\r\n    if (this.dni === \"\") alert(\"Debes rellenar el DNI\");\r\n    //[1º] TODO: coger el contenido de email y password\r\n\r\n    //[2º] TODO: fetch al backend\r\n    let sasa = await getAuth(this.dni, this.phone);\r\n    console.log(sasa); //devuelve el token de auth\r\n\r\n    //[3º] TODO: si el fetch devuelve token no hago nada\r\n\r\n    if (sasa.error) {\r\n      // Actualiza el estado del componente con lo que queremos cambiar.\r\n      // Y esto automáticamente renderiza de nuevo el componente\r\n      this.setState({ error: true });\r\n    }\r\n\r\n    //[4º] TODO: si el fetch no devuelve token actualizo el estado del error\r\n\r\n    /*No TOKEN*/\r\n\r\n    /* const result = getAuth();\r\n    if (result) this.setState({ error: true }); */\r\n  }\r\n\r\n  handlerDni(e) {\r\n    this.dni = e.target.value;\r\n    /* console.log(this.dni, \"handler DNI\"); */\r\n  }\r\n\r\n  handlerPhone(e) {\r\n    this.phone = e.target.value;\r\n    /* console.log(e.target.value, \"handler Phone\"); */\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.error && <Error msg='Credenciales incorrectas' />}\r\n        <form>\r\n          <input type='text' onInput={e => this.handlerDni(e)} />\r\n          <input type='text' onInput={e => this.handlerPhone(e)} />\r\n          <br />\r\n          <button onClick={e => this.submitLogin(e)}>Enviar</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}